version: '3.8'

services:
  # PostgreSQL Database for Development
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: legal_manager_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis for Development
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Django Development Server
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-not-for-production
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=legal_manager_dev
      - DB_USER=dev_user
      - DB_PASSWORD=dev_password
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery Worker for Development
  celery:
    build: .
    command: celery -A legal_manager worker --loglevel=debug
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-not-for-production
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=legal_manager_dev
      - DB_USER=dev_user
      - DB_PASSWORD=dev_password
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

volumes:
  postgres_data_dev:

networks:
  default:
    driver: bridge
